#include <iostream>
#include <fstream>
using namespace std;

void multiply(int* data, int n) {
    for (int i = 0; i < n; i++) {
        data[i] *= 5;
    }
}

void square(float* data, int n) {
    for (int i = 0; i < n; i++) {
        data[i] = data[i] * data[i];
    }
}

void All() {
    int num[4] = { 1, 2, 3, 4 };
    int int_data[5] = { 1000, 2000, 3000, 4000, 5000 };
    float float_data[3];
    for (int i = 0; i < 3; ++i) {
        float_data[i] = -0.5 + i * 0.5;
    }

    multiply(int_data, 5);
    square(float_data, 3);

    ofstream xx("mybin.dat", ios::binary | ios::out);
    if (!xx) cout << "Fail" << endl;

    xx.write((char*)(&num), 4 * sizeof(int));
    xx.write((char*)(&int_data), 5 * sizeof(int));
    xx.write((char*)(&float_data), 3 * sizeof(float));

    xx.close();


    //reading
    ifstream yy("mybin.dat", ios::binary | ios::in);
    if (!yy) cout << "Fail" << endl;

    int read_num[4];
    int read_int_data[5];
    float read_float_data[3];

    yy.read((char*)(&read_num), sizeof(read_num));
    yy.read((char*)(&read_int_data), sizeof(read_int_data));
    yy.read((char*)(&read_float_data), sizeof(read_float_data));
    yy.close();

    for (int i = 0; i < 4; ++i) {
        cout << " " << read_num[i];
    }
    cout << endl;
    for (int i = 0; i < 5; ++i) {
        cout << " " << read_int_data[i];
    }
    cout << endl;
    for (int i = 0; i < 3; ++i) {
        cout << " " << read_float_data[i];
    }
    cout << endl;
}

int main() {
    All();
    return 1;
}
